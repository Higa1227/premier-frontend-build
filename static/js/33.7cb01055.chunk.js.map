{"version":3,"sources":["containers/Auth/SignUp/SignUpForm.js","containers/Auth/SignUp/SignUp.js"],"names":["SignUpForm","signUp","loggedIn","useContext","AuthContext","control","watch","formState","errors","handleSubmit","useForm","mode","password","confirmPassword","to","replace","onSubmit","data","FormControl","label","htmlFor","error","username","type","name","defaultValue","rules","required","render","field","onChange","onBlur","value","email","pattern","minLength","maxLength","Password","valueName","checked","className","htmlType","size","style","width","SignUp","Logo","withLink","linkTo","src","title","SocialLogin","LOGIN_PAGE","alt"],"mappings":"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","file":"static/js/33.7cb01055.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useForm, Controller } from 'react-hook-form';\nimport { MdLockOpen } from 'react-icons/md';\nimport { Input, Switch, Button } from 'antd';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport { AuthContext } from 'context/AuthProvider';\nimport { FieldWrapper, SwitchWrapper, Label } from '../Auth.style';\n\nconst SignUpForm = () => {\n  const { signUp, loggedIn } = useContext(AuthContext);\n  const {\n    control,\n    watch,\n    formState: { errors },\n    handleSubmit,\n  } = useForm({\n    mode: 'onChange',\n  });\n  const password = watch('password');\n  const confirmPassword = watch('confirmPassword');\n  const onSubmit = (data) => {\n    signUp(data);\n  };\n  if (loggedIn) {\n    return <Navigate to=\"/\" replace={true} />;\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <FormControl\n        label=\"Username\"\n        htmlFor=\"username\"\n        error={\n          errors.username && (\n            <>\n              {errors.username?.type === 'required' && (\n                <span>This field is required!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          name=\"username\"\n          defaultValue=\"\"\n          control={control}\n          rules={{ required: true }}\n          render={({ field: { onChange, onBlur, value } }) => (\n            <Input onChange={onChange} onBlur={onBlur} value={value} />\n          )}\n        />\n      </FormControl>\n      <FormControl\n        label=\"Email\"\n        htmlFor=\"email\"\n        error={\n          errors.email && (\n            <>\n              {errors.email?.type === 'required' && (\n                <span>This field is required!</span>\n              )}\n              {errors.email?.type === 'pattern' && (\n                <span>Please enter a valid email address!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          name=\"email\"\n          defaultValue=\"\"\n          control={control}\n          rules={{\n            required: true,\n            pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n          }}\n          render={({ field: { onChange, onBlur, value } }) => (\n            <Input\n              type=\"email\"\n              onChange={onChange}\n              onBlur={onBlur}\n              value={value}\n            />\n          )}\n        />\n      </FormControl>\n      <FormControl\n        label=\"Password\"\n        htmlFor=\"password\"\n        error={\n          errors.password && (\n            <>\n              {errors.password?.type === 'required' && (\n                <span>This field is required!</span>\n              )}\n              {errors.password?.type === 'minLength' && (\n                <span>Password must be at lest 6 characters!</span>\n              )}\n              {errors.password?.type === 'maxLength' && (\n                <span>Password must not be longer than 20 characters!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          name=\"password\"\n          defaultValue=\"\"\n          control={control}\n          rules={{ required: true, minLength: 6, maxLength: 20 }}\n          render={({ field: { onChange, onBlur, value } }) => (\n            <Input.Password onChange={onChange} onBlur={onBlur} value={value} />\n          )}\n        />\n      </FormControl>\n      <FormControl\n        label=\"Confirm password\"\n        htmlFor=\"confirmPassword\"\n        error={\n          confirmPassword &&\n          password !== confirmPassword && (\n            <span>Your password is not same!</span>\n          )\n        }\n      >\n        <Controller\n          name=\"confirmPassword\"\n          defaultValue=\"\"\n          control={control}\n          rules={{ required: true }}\n          render={({ field: { onChange, onBlur, value } }) => (\n            <Input.Password onChange={onChange} onBlur={onBlur} value={value} />\n          )}\n        />\n      </FormControl>\n      <FieldWrapper>\n        <SwitchWrapper>\n          <Controller\n            control={control}\n            name=\"rememberMe\"\n            valueName=\"checked\"\n            defaultValue={false}\n            render={({ field: { onChange, value } }) => (\n              <Switch onChange={onChange} checked={value} />\n            )}\n          />\n          <Label>Remember Me</Label>\n        </SwitchWrapper>\n        <SwitchWrapper>\n          <Controller\n            control={control}\n            name=\"termsAndConditions\"\n            valueName=\"checked\"\n            defaultValue={false}\n            render={({ field: { onChange, value } }) => (\n              <Switch onChange={onChange} checked={value} />\n            )}\n          />\n          <Label>I agree with terms and conditions</Label>\n        </SwitchWrapper>\n      </FieldWrapper>\n      <Button\n        className=\"signin-btn\"\n        type=\"primary\"\n        htmlType=\"submit\"\n        size=\"large\"\n        style={{ width: '100%' }}\n      >\n        <MdLockOpen />\n        Register\n      </Button>\n    </form>\n  );\n};\n\nexport default SignUpForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Divider } from 'antd';\nimport Logo from 'components/UI/Logo/Logo';\nimport { LOGIN_PAGE } from 'settings/constant';\nimport SignUpForm from './SignUpForm';\nimport SocialLogin from '../SocialLogin';\nimport Wrapper, {\n  Title,\n  TitleInfo,\n  Text,\n  FormWrapper,\n  BannerWrapper,\n} from '../Auth.style';\n\nconst SignUp = () => {\n  return (\n    <Wrapper>\n      <FormWrapper>\n        <Logo\n          withLink\n          linkTo=\"/\"\n          src=\"/images/logo-alt.svg\"\n          title=\"Premier.\"\n        />\n        <Title>Welcome To Premier</Title>\n        <TitleInfo>Please Register for your account</TitleInfo>\n        <SignUpForm />\n        <Divider>Or Register Up With </Divider>\n        <SocialLogin />\n        <Text>\n          Already Have an Account! &nbsp;\n          <Link to={LOGIN_PAGE}>Login</Link>\n        </Text>\n      </FormWrapper>\n      <BannerWrapper>\n        <img src=\"/images/login-page-bg.jpg\" alt=\"Auth page banner\" />\n      </BannerWrapper>\n    </Wrapper>\n  );\n};\n\nexport default SignUp;\n"],"sourceRoot":""}