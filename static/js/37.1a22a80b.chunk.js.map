{"version":3,"sources":["containers/Agent/AccountSettings/AccountSettings.style.js","web3/PremierStaking.js","containers/Agent/AccountSettings/booking/BookingDetail.js"],"names":["AccountSettingWrapper","styled","div","AccountSidebar","aside","themeGet","SidebarMenuWrapper","AgentAvatar","ContentWrapper","AgentName","h3","FromWrapper","FormTitle","h2","BookingDetailButtons","Web3","require","lockNft","async","tokenId","isLocked","address","window","ethereum","web3","enable","currentProvider","alert","PremierStaking","contractAddress","utils","toChecksumAddress","process","contract","eth","Contract","abi","e","methods","setLockStatus","estimateGas","from","u","success","type","c","d","getGasPrice","send","gas","parseInt","gasPrice","maxFeePerGas","status","stakeNft","stakeOne","BookingDetail","props","metamaskConnected","account","navigate","useNavigate","id","useParams","booking","setBooking","useState","collection","setCollection","useEffect","apiData","res","AxiosFetch","data","openNotificationWithIcon","title","description","message","placement","handleLock","then","updateBookingStatus","handleUnLock","body","_status","console","log","prevState","PhotosArray","photos","undefined","JSON","parse","map","item","width","src","className","onClick","formatActionButton","formatStatus","style","marginTop","bordered","Item","label","firstName","lastName","birthday","phoneNumber","span","email","startDate","endDate","date","createdAt","replace","lockDays","location","PreviewGroup","driverLicenses","insurances","name","vin","price"],"mappings":"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","file":"static/js/37.1a22a80b.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nconst AccountSettingWrapper = styled.div`\n  padding: 60px 0;\n  @media (max-width: 767px) {\n    padding: 30px 0;\n  }\n`;\n\nexport const AccountSidebar = styled.aside`\n  border-radius: 6px;\n  background-color: ${themeGet('color.1', '#ffffff')};\n  box-shadow: 0 3px 6px ${themeGet('boxShadow.1', 'rgba(26, 68, 116, 0.16)')};\n  overflow: hidden;\n  @media (max-width: 767px) {\n    box-shadow: none;\n    margin-bottom: 0;\n  }\n\n  .ant-menu {\n    padding: 27px 0 20px;\n    border: 0;\n    @media (max-width: 767px) {\n      display: flex;\n      flex-wrap: nowrap;\n      overflow-y: auto;\n      padding: 20px 0 30px;\n    }\n    li {\n      margin: 22px 0;\n      height: 26px;\n      line-height: 26px;\n      padding: 0 30px !important;\n      @media (min-width: 1441px) {\n        padding: 0 60px !important;\n      }\n      @media (max-width: 767px) {\n        width: auto;\n        height: inherit;\n        line-height: initial;\n        padding: 0 15px !important;\n        margin: 0 !important;\n        flex-shrink: 0;\n        &:first-child {\n          padding-left: 0 !important;\n        }\n        &::after {\n          display: none;\n        }\n      }\n      &.ant-menu-item-selected {\n        background-color: transparent;\n        &::after {\n          left: 0;\n          right: auto;\n          border-color: ${themeGet('primary.0', '#008489')};\n        }\n        a {\n          color: ${themeGet('primary.0', '#008489')};\n          font-weight: 700;\n        }\n      }\n      a {\n        color: ${themeGet('text.0', '#2C2C2C')};\n        font-size: 15px;\n        transition: 0.3s ease;\n        @media (max-width: 767px) {\n          padding-bottom: 8px;\n          border-bottom: 2px solid transparent;\n          &.active {\n            border-bottom-color: ${themeGet('primary.0', '#008489')};\n          }\n        }\n        &:hover {\n          color: ${themeGet('primary.0', '#008489')};\n        }\n      }\n    }\n  }\n`;\n\nexport const SidebarMenuWrapper = styled.div`\n  overflow: hidden;\n  @media (max-width: 767px) {\n    height: 67px;\n    margin-bottom: 8px;\n  }\n`;\n\nexport const AgentAvatar = styled.div`\n  background-color: ${themeGet('color.2', '#F7F7F7')};\n  padding: 45px 30px 30px;\n  @media (min-width: 1441px) {\n    padding: 60px 60px 30px;\n  }\n  @media (max-width: 767px) {\n    display: flex;\n    align-items: center;\n    padding: 32px 30px;\n  }\n  .ant-avatar {\n    width: 90px;\n    height: 90px;\n    margin-bottom: 25px;\n    @media (max-width: 767px) {\n      width: 80px;\n      height: 80px;\n      margin-bottom: 0;\n      margin-right: 20px;\n      flex-shrink: 0;\n    }\n    @media (max-width: 320px) {\n      width: 65px;\n      height: 65px;\n    }\n  }\n  a {\n    color: ${themeGet('text.0', '#2C2C2C')};\n    font-size: 13px;\n    line-height: 16px;\n    &:hover,\n    &:focus {\n      outline: 0;\n      box-shadow: none;\n      text-decoration: none;\n    }\n  }\n`;\n\nexport const ContentWrapper = styled.div``;\n\nexport const AgentName = styled.h3`\n  color: ${themeGet('text.0', '#2C2C2C')};\n  font-size: 17px;\n  line-height: 21px;\n  font-weight: 700;\n  margin-bottom: 4px;\n`;\n\nexport const FromWrapper = styled.div`\n  padding: 30px;\n  border-radius: 6px;\n  border: 1px solid ${themeGet('border.3', '#E6E6E6')};\n  background-color: ${themeGet('color.1', '#ffffff')};\n  overflow: hidden;\n  @media (min-width: 1441px) {\n    padding: 60px;\n  }\n  @media (max-width: 767px) {\n    padding: 0;\n    border-radius: 0;\n    border: 0;\n\n    h2 {\n      display: none;\n    }\n\n    form {\n      padding-bottom: 50px;\n    }\n  }\n\n  .submit-container {\n    display: flex;\n    flex-direction: row-reverse;\n    margin-top: 30px;\n    @media (max-width: 767px) {\n      width: 100%;\n      padding: 22px 30px;\n      flex-direction: row;\n      position: fixed;\n      bottom: 0;\n      left: 0;\n      z-index: 1;\n      background-color: ${themeGet('color.1', '#ffffff')};\n      border-top: 1px solid ${themeGet('border.3', '#E6E6E6')};\n    }\n    > button[type='submit'] {\n      border-radius: 3px;\n      height: 47px;\n      border-color: ${themeGet('primary.0', '#008489')};\n      background-color: ${themeGet('primary.0', '#008489')};\n      font-size: 15px;\n      font-weight: 700;\n      text-transform: capitalize;\n      padding-left: 28px;\n      padding-right: 28px;\n      line-height: 1;\n      &::after {\n        content: none;\n      }\n    }\n  }\n`;\n\nexport const FormTitle = styled.h2`\n  color: ${themeGet('text.0', '#2C2C2C')};\n  font-size: 25px;\n  line-height: 30px;\n  font-weight: 700;\n  margin-bottom: 27px;\n  @media (min-width: 1441px) {\n    margin-bottom: 40px;\n  }\n  @media (max-width: 1200px) {\n    font-size: 22px;\n  }\n`;\n\nexport const AgentPictureUploader = styled.div`\n  @media (max-width: 767px) {\n    padding-bottom: 50px;\n  }\n  h4 {\n    font-size: 15px;\n    font-weight: 700;\n    line-height: 18px;\n    margin-bottom: 20px;\n  }\n  .image_uploader {\n    display: block;\n    overflow: hidden;\n    margin-bottom: 30px;\n  }\n  .ant-upload.ant-upload-drag {\n    border-radius: 3px;\n    background-color: ${themeGet('color.2', '#F7F7F7')};\n    border: 1px solid ${themeGet('border.0', '#EBEBEB')};\n    &:not(.ant-upload-disabled):hover {\n      border-color: ${themeGet('border.0', '#EBEBEB')};\n    }\n    .ant-upload.ant-upload-btn {\n      padding: 56px 0;\n      @media (max-width: 767px) {\n        padding: 30px 0;\n      }\n      .ant-upload-drag-container {\n        > div {\n          flex-direction: column;\n          justify-content: center;\n          .ant-upload-text {\n            padding: 0;\n            margin: 5px 0 0;\n            text-decoration: underline;\n            background-color: transparent;\n            color: ${themeGet('primary.0', '#008489')};\n          }\n        }\n      }\n    }\n  }\n  .ant-upload-list {\n    &.ant-upload-list-picture-card {\n      margin-top: 20px;\n      .ant-upload-list-item {\n        padding: 5px;\n        border-radius: 3px;\n        border-color: ${themeGet('border.3', '#E6E6E6')};\n      }\n    }\n  }\n`;\n\nexport const BookingDetailButtons = styled.div`\n  display: flex;\n  justify-content: space-between;\n  marginBottom: 30px;\n  .buttons {\n    .ant-btn {\n      margin-right: 10px;\n    }\n    .dangerButton {\n      background: red;\n      border-color: yellow;\n    }\n  }\n`;\nexport default AccountSettingWrapper;\n","var Web3 = require(\"web3\");\r\n\r\nconst stakeNft = async (tokenId, address) => {\r\n    if (window.ethereum) {\r\n        window.web3 = new Web3(window.ethereum);\r\n        window.ethereum.enable();\r\n    } else if (window.web3) {\r\n        window.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n        window.alert(\r\n            \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n        );\r\n    }\r\n    var web3 = window.web3;\r\n    \r\n    const PremierStaking = require(\"./PremierStaking.json\");\r\n    const contractAddress = web3.utils.toChecksumAddress(process.env.REACT_APP_PREMIER_STAKING_ADDRESS);\r\n\r\n    const contract = new web3.eth.Contract(PremierStaking.abi, contractAddress);\r\n    \r\n    let e;\r\n\r\n    try {\r\n        e = await contract.methods.stakeOne(tokenId).estimateGas({\r\n            from: address\r\n        })\r\n    } catch (u) {\r\n        \r\n        return { success: false, type: 'estimategas' }\r\n    }\r\n\r\n    let d = await web3.eth.getGasPrice();\r\n\r\n    let c;\r\n    \r\n    try {\r\n        c = await contract.methods.stakeOne(tokenId).send({\r\n            from: address,\r\n            gas: parseInt(e),\r\n            gasPrice: parseInt(1.2 * d),\r\n            maxFeePerGas: null,\r\n        })\r\n    } catch (u) {\r\n        return {success: false, type:\"stake\"};\r\n    }\r\n\r\n    if(c){\r\n        return {success: c.status, type:\"stake\"};\r\n    }\r\n}\r\n\r\nexport const lockNft = async (tokenId, isLocked, address) => {\r\n    if (window.ethereum) {\r\n        window.web3 = new Web3(window.ethereum);\r\n        window.ethereum.enable();\r\n    } else if (window.web3) {\r\n        window.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n        window.alert(\r\n            \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n        );\r\n    }\r\n    var web3 = window.web3;\r\n    \r\n    const PremierStaking = require(\"./PremierStaking.json\");\r\n    const contractAddress = web3.utils.toChecksumAddress(process.env.REACT_APP_PREMIER_STAKING_ADDRESS);\r\n\r\n    const contract = new web3.eth.Contract(PremierStaking.abi, contractAddress);\r\n    \r\n    let e;\r\n\r\n    try {\r\n        e = await contract.methods.setLockStatus(tokenId, isLocked).estimateGas({\r\n            from: address\r\n        })\r\n    } catch (u) {\r\n        \r\n        return { success: false, type: 'estimategas' }\r\n    }\r\n\r\n    let d = await web3.eth.getGasPrice();\r\n\r\n    let c;\r\n    \r\n    try {\r\n        c = await contract.methods.setLockStatus(tokenId, isLocked).send({\r\n            from: address,\r\n            gas: parseInt(e),\r\n            gasPrice: parseInt(1.2 * d),\r\n            maxFeePerGas: null,\r\n        })\r\n    } catch (u) {\r\n        return {success: false, type:\"lock\"};\r\n    }\r\n\r\n    if(c){\r\n        return {success: c.status, type:\"lock\"};\r\n    }\r\n}\r\n\r\nexport default stakeNft;","import React, { useEffect, useState }from 'react';\r\nimport { Image , Descriptions, Button, notification } from 'antd';\r\nimport { useParams } from 'react-router-dom';\r\nimport AxiosFetch from 'library/hooks/AxiosFetch';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BookingDetailButtons } from '../AccountSettings.style';\r\nimport { lockNft } from 'web3/PremierStaking';\r\n\r\nconst BookingDetail = (props) => {\r\n\r\n    const {metamaskConnected, account} = props;\r\n\r\n    const navigate = useNavigate();\r\n\r\n    let { id } = useParams();\r\n    const [booking, setBooking] = useState({});\r\n    const [collection, setCollection] = useState({});\r\n\r\n    useEffect(async () => {\r\n        let url = '/getBookingById';\r\n        const apiData = {\r\n            id: id\r\n        }\r\n        let res = await AxiosFetch(url, apiData, \"POST\");\r\n        if(res.data.success) {\r\n            setBooking(res.data.booking);\r\n            setCollection(res.data.collection);\r\n        }        \r\n    }, [id]);\r\n\r\n    const openNotificationWithIcon = (type, title, description) => {\r\n        notification[type]({\r\n          message: title,\r\n          description: description,\r\n          placement: 'bottomRight'\r\n        });\r\n    };\r\n\r\n    const formatDate = (date) => {\r\n        let dateString = '' + date;        \r\n        let newDate = dateString.replace('Z', ' ').replace('T', ' ');        \r\n        return newDate;\r\n    }\r\n\r\n    const formatStatus = (status) => {\r\n        switch(status)\r\n        {\r\n            case 'booked':\r\n                return 'Booked';\r\n            case 'locked':\r\n                return 'Locked';\r\n            case 'unlock_available':\r\n                return 'Unlock Available';\r\n            case 'unlock_requested':\r\n                return 'Unlock Requested';\r\n            case 'unlocked':\r\n                return 'Unlocked';\r\n            default:\r\n                return 'Unknown';\r\n        }\r\n    }\r\n\r\n    const handleLock = async () => {\r\n        if(!metamaskConnected) {\r\n            openNotificationWithIcon('error', 'Error!', 'You must connect your wallet!');\r\n            return;\r\n        }\r\n        await lockNft(booking.tokenId, true, account).then(\r\n            (data) => {          \r\n              if (data.success == false) {\r\n                if (data.type == \"estimategas\") {\r\n                  openNotificationWithIcon('error', 'Error!', `Insufficient funds to Lock. Please check your balance and some gas fee!`)              \r\n                } else if (data.type == \"lock\") {\r\n                  openNotificationWithIcon('error', 'Error!', `Error happened while locking, please try again later`)                            \r\n                }\r\n              }\r\n              else\r\n              {                \r\n                openNotificationWithIcon('success', 'Success!', `NFT Lock Status has been changed.`);\r\n                updateBookingStatus('locked');\r\n              }\r\n            }\r\n        );   \r\n    }\r\n\r\n    const handleUnLock = async () => {\r\n        if(!metamaskConnected) {\r\n            openNotificationWithIcon('error', 'Error!', 'You must connect your wallet!');\r\n            return;\r\n        }\r\n        await lockNft(booking.tokenId, false, account).then(\r\n            (data) => {          \r\n              if (data.success == false) {\r\n                if (data.type == \"estimategas\") {\r\n                  openNotificationWithIcon('error', 'Error!', `Insufficient funds to Unlock. Please check your balance and some gas fee!`)              \r\n                } else if (data.type == \"lock\") {\r\n                  openNotificationWithIcon('error', 'Error!', `Error happened while unlocking, please try again later`)                            \r\n                }\r\n              }\r\n              else\r\n              {                \r\n                openNotificationWithIcon('success', 'Success!', `NFT Lock Status has been changed.`);\r\n                updateBookingStatus('unlocked');\r\n              }\r\n            }\r\n        );   \r\n    }\r\n\r\n    const updateBookingStatus = async (_status) => {\r\n        const body = {\r\n            id: booking.id,\r\n            status: _status\r\n          }\r\n      \r\n        let url = '/updateBookingStatus';\r\n        \r\n        let res = await AxiosFetch(url, body, \"POST\");\r\n        console.log(res)\r\n\r\n        setBooking((prevState) => {\r\n            return({\r\n              ...prevState,\r\n              status: _status\r\n            });\r\n        });\r\n    }\r\n    const formatActionButton = (status) => {\r\n        switch(status)\r\n        {\r\n            case 'booked':\r\n                return (<Button className=\"dangerButton\" type=\"primary\" onClick={handleLock}> Lock </Button>);\r\n            case 'locked':\r\n                return (<Button className=\"dangerButton\" type=\"primary\" onClick={handleUnLock}> Unlock </Button>);\r\n            case 'unlock_available':\r\n                return (<Button className=\"dangerButton\" type=\"primary\" onClick={handleUnLock}> Unlock </Button>);\r\n            case 'unlock_requested':\r\n                return (<Button className=\"dangerButton\" type=\"primary\" onClick={handleUnLock}> Unlock </Button>);\r\n            case 'unlocked':\r\n                return;\r\n            default:\r\n                return;\r\n        }        \r\n    }\r\n    const PhotosArray = (photos) => {\r\n        if(photos === undefined)\r\n        {\r\n            return;\r\n        }            \r\n        const imageArray = JSON.parse(photos);\r\n        return (\r\n            imageArray.map(item => (                \r\n                <Image width={200} src={process.env.REACT_APP_SERVER_URL + \"images/\" + item} key={item}/>\r\n            )) \r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <BookingDetailButtons>\r\n                <div className=\"buttons\">\r\n                    <Button className=\"actionButton\" type=\"primary\" onClick={() => navigate(-1)}>Back</Button>\r\n                    { formatActionButton(booking.status) }\r\n                </div>\r\n                <span className=\"statusText\">Status: { formatStatus(booking.status) }</span>\r\n            </BookingDetailButtons>\r\n            <Descriptions title=\"Booking Info\" style={{marginTop: \"30px\"}} bordered>\r\n                <Descriptions.Item label=\"First Name\">{ booking.firstName }</Descriptions.Item>\r\n                <Descriptions.Item label=\"Last Name\">{ booking.lastName }</Descriptions.Item>\r\n                <Descriptions.Item label=\"Birthday\">{ booking.birthday }</Descriptions.Item>\r\n\r\n                <Descriptions.Item label=\"Phone Number\">{ booking.phoneNumber }</Descriptions.Item>\r\n                <Descriptions.Item label=\"Email Address\" span={2}>{ booking.email }</Descriptions.Item>\r\n                \r\n                <Descriptions.Item label=\"Duration\">{ booking.startDate } ~ { booking.endDate }</Descriptions.Item>            \r\n                <Descriptions.Item label=\"Booked Time\" span={2}>\r\n                    { formatDate(booking.createdAt) }\r\n                </Descriptions.Item>\r\n                \r\n                <Descriptions.Item label=\"Lock Days\"> { booking.lockDays } </Descriptions.Item>\r\n                <Descriptions.Item label=\"Location\" span={2}>\r\n                    { booking.location }\r\n                </Descriptions.Item>\r\n\r\n                <Descriptions.Item label=\"Owner\" span={3}> { booking.account } </Descriptions.Item>                            \r\n\r\n                <Descriptions.Item label=\"Driver License Photos\" span={3}>\r\n                    <Image.PreviewGroup>\r\n                        { PhotosArray(booking.driverLicenses) }                    \r\n                    </Image.PreviewGroup>\r\n                </Descriptions.Item>\r\n\r\n                <Descriptions.Item label=\"Insurance Photos\" span={3}>\r\n                    <Image.PreviewGroup>\r\n                        { PhotosArray(booking.insurances) }                    \r\n                    </Image.PreviewGroup>\r\n                </Descriptions.Item>            \r\n            </Descriptions>\r\n\r\n            <Descriptions title=\"NFT Info\" style={{marginTop: \"30px\"}} bordered>\r\n                <Descriptions.Item label=\"Car Name\">{ collection.name }</Descriptions.Item>\r\n                <Descriptions.Item label=\"Vin\">{ collection.vin }</Descriptions.Item>\r\n                <Descriptions.Item label=\"Price\">{ collection.price }$/Day</Descriptions.Item>\r\n\r\n                <Descriptions.Item label={\"NFT Image(Token ID: \" + booking.tokenId + \")\"} span={3}>\r\n                    <Image.PreviewGroup>\r\n                        <Image width={200} src={process.env.REACT_APP_URL + \"images/premier/\" + booking.tokenId + \".jpg\"}/>\r\n                    </Image.PreviewGroup>\r\n                </Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookingDetail;"],"sourceRoot":""}