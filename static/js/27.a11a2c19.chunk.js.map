{"version":3,"sources":["components/UI/AntdDatePicker/AntdDatePicker.js","containers/Agent/AccountSettings/AgentCreateOrUpdateForm.js","components/UI/FormControl/FormControl.style.js","components/UI/FormControl/FormControl.js","components/UI/HtmlLabel/HtmlLabel.js","containers/Agent/AccountSettings/AccountSettings.style.js"],"names":["DatePicker","generatePicker","dayjsGenerateConfig","genderOptions","label","value","languageOptions","AgentCreateOrUpdateForm","control","formState","errors","handleSubmit","useForm","className","onSubmit","data","console","log","gutter","lg","FormControl","htmlFor","error","firstName","name","defaultValue","rules","required","render","field","onChange","onBlur","lastName","dateOfBirthday","md","agentGender","options","preferredLanguage","email","type","pattern","phoneNumber","address","TextArea","rows","htmlType","Wrapper","styled","div","themeGet","labelTag","children","addAllClasses","push","join","HtmlLabel","as","content","LabelWrapper","base","fontFamily","fontWeight","textAlign","lineHeight","letterSpacing","themed","props","AccountSettingWrapper","AccountSidebar","aside","SidebarMenuWrapper","AgentAvatar","ContentWrapper","AgentName","h3","FromWrapper","FormTitle","h2","AgentPictureUploader"],"mappings":"mTAMeA,MAFIC,IAAeC,K,gBCGlC,MAAMC,EAAgB,CACpB,CAAEC,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,QAASC,MAAO,UAErBC,EAAkB,CACtB,CAAEF,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,UAAWC,MAAO,YA0PdE,UAvPiB,KAAO,IAAD,QACpC,MAAM,QACJC,EACAC,WAAW,OAAEC,GAFT,aAGJC,GACEC,cAEJ,OACE,eAAC,WAAD,WACE,cAAC,IAAD,gCACA,uBAAMC,UAAU,iBAAiBC,SAAUH,GAJ7BI,GAASC,QAAQC,IAAIF,KAInC,UACE,oBAAKG,OAAQ,GAAb,UACE,mBAAKC,GAAI,GAAT,SACE,cAACC,EAAA,EAAD,CACEhB,MAAM,aACNiB,QAAQ,YACRC,MAAOZ,EAAOa,WAAa,2DAH7B,SAKE,cAAC,IAAD,CACEC,KAAK,YACLC,aAAa,GACbjB,QAASA,EACTkB,MAAO,CAAEC,UAAU,GACnBC,OAAQ,QAAGC,OAAO,SAAEC,EAAF,OAAYC,EAAZ,MAAoB1B,IAA9B,SACN,mBAAOyB,SAAUA,EAAUC,OAAQA,EAAQ1B,MAAOA,WAK1D,mBAAKc,GAAI,GAAT,SACE,cAACC,EAAA,EAAD,CACEhB,MAAM,YACNiB,QAAQ,WACRC,MAAOZ,EAAOsB,UAAY,2DAH5B,SAKE,cAAC,IAAD,CACER,KAAK,WACLC,aAAa,GACbjB,QAASA,EACTkB,MAAO,CAAEC,UAAU,GACnBC,OAAQ,QAAGC,OAAO,SAAEC,EAAF,OAAYC,EAAZ,MAAoB1B,IAA9B,SACN,mBAAOyB,SAAUA,EAAUC,OAAQA,EAAQ1B,MAAOA,cAM5D,oBAAKa,OAAQ,GAAb,UACE,mBAAKC,GAAI,GAAT,SACE,cAACC,EAAA,EAAD,CACEhB,MAAM,gBACNiB,QAAQ,iBACRC,MACEZ,EAAOuB,gBAAkB,2DAJ7B,SAOE,cAAC,IAAD,CACET,KAAK,iBACLC,aAAa,GACbjB,QAASA,EACTkB,MAAO,CAAEC,UAAU,GACnBC,OAAQ,QAAGC,OAAO,SAAEC,EAAF,OAAYC,EAAZ,MAAoB1B,IAA9B,SACN,cAAC,EAAD,CACEyB,SAAUA,EACVC,OAAQA,EACR1B,MAAOA,WAMjB,mBAAKc,GAAI,GAAT,SACE,oBAAKD,OAAQ,GAAb,UACE,mBAAKgB,GAAI,GAAT,SACE,cAACd,EAAA,EAAD,CACEhB,MAAM,OACNiB,QAAQ,cACRC,MACEZ,EAAOyB,aAAe,2DAJ1B,SAOE,cAAC,IAAD,CACEX,KAAK,cACLC,aAAa,GACbjB,QAASA,EACTkB,MAAO,CAAEC,UAAU,GACnBC,OAAQ,QAAGC,OAAO,SAAEC,EAAF,OAAYC,EAAZ,MAAoB1B,IAA9B,SACN,mBACE+B,QAASjC,EACT2B,SAAUA,EACVC,OAAQA,EACR1B,MAAOA,WAMjB,mBAAK6B,GAAI,GAAT,SACE,cAACd,EAAA,EAAD,CACEhB,MAAM,qBACNiB,QAAQ,oBACRC,MACEZ,EAAO2B,mBACL,2DALN,SASE,cAAC,IAAD,CACEb,KAAK,oBACLC,aAAa,GACbjB,QAASA,EACTkB,MAAO,CAAEC,UAAU,GACnBC,OAAQ,QAAGC,OAAO,SAAEC,EAAF,OAAYC,EAAZ,MAAoB1B,IAA9B,SACN,mBACE+B,QAAS9B,EACTwB,SAAUA,EACVC,OAAQA,EACR1B,MAAOA,mBASvB,oBAAKa,OAAQ,GAAb,UACE,mBAAKC,GAAI,GAAT,SACE,cAACC,EAAA,EAAD,CACEhB,MAAM,gBACNiB,QAAQ,QACRC,MACEZ,EAAO4B,OACL,qCAC0B,cAAvB,UAAA5B,EAAO4B,aAAP,eAAcC,OACb,2DAEsB,aAAvB,UAAA7B,EAAO4B,aAAP,eAAcC,OACb,0EAVV,SAgBE,cAAC,IAAD,CACEf,KAAK,QACLC,aAAa,GACbjB,QAASA,EACTkB,MAAO,CACLC,UAAU,EACVa,QAAS,+CAEXZ,OAAQ,QAAGC,OAAO,SAAEC,EAAF,OAAYC,EAAZ,MAAoB1B,IAA9B,SACN,mBACEkC,KAAK,QACLT,SAAUA,EACVC,OAAQA,EACR1B,MAAOA,WAMjB,mBAAKc,GAAI,GAAT,SACE,cAACC,EAAA,EAAD,CACEhB,MAAM,eACNiB,QAAQ,cACRC,MACEZ,EAAO+B,aACL,qCACgC,cAA7B,UAAA/B,EAAO+B,mBAAP,eAAoBF,OACnB,2DAE4B,aAA7B,UAAA7B,EAAO+B,mBAAP,eAAoBF,OACnB,sEAVV,SAgBE,cAAC,IAAD,CACEf,KAAK,cACLC,aAAa,GACbjB,QAASA,EACTkB,MAAO,CACLC,UAAU,EACVa,QAAS,YAEXZ,OAAQ,QAAGC,OAAO,SAAEC,EAAF,OAAYC,EAAZ,MAAoB1B,IAA9B,SACN,mBAAOyB,SAAUA,EAAUC,OAAQA,EAAQ1B,MAAOA,WAK1D,mBAAKc,GAAI,GAAT,SACE,cAACC,EAAA,EAAD,CACEhB,MAAM,iBACNiB,QAAQ,UACRC,MAAOZ,EAAOgC,SAAW,2DAH3B,SAKE,cAAC,IAAD,CACElB,KAAK,UACLC,aAAa,GACbjB,QAASA,EACTkB,MAAO,CACLC,UAAU,GAEZC,OAAQ,QAAGC,OAAO,SAAEC,EAAF,OAAYC,EAAZ,MAAoB1B,IAA9B,SACN,mBAAOyB,SAAUA,EAAUC,OAAQA,EAAQ1B,MAAOA,WAK1D,mBAAKc,GAAI,GAAT,SACE,cAACC,EAAA,EAAD,CACEhB,MAAM,+BACNiB,QAAQ,mBAFV,SAIE,cAAC,IAAD,CACEG,KAAK,mBACLC,aAAa,GACbjB,QAASA,EACTkB,MAAO,CACLC,UAAU,GAEZC,OAAQ,QAAGC,OAAO,SAAEC,EAAF,OAAYC,EAAZ,MAAoB1B,IAA9B,SACN,kBAAOsC,SAAP,CACEC,KAAM,EACNd,SAAUA,EACVC,OAAQA,EACR1B,MAAOA,cAOnB,qBAAKQ,UAAU,mBAAf,SACE,mBAAQgC,SAAS,SAASN,KAAK,UAA/B,oC,4EC5FKO,MAlKCC,IAAOC,IAAV,spGAKAC,YAAS,SAAU,WAcZA,YAAS,WAAY,WAexBA,YAAS,SAAU,WAKZA,YAAS,SAAU,WAIjBA,YAAS,YAAa,WAClBA,YAAS,YAAa,WAY9BA,YAAS,WAAY,WAM5BA,YAAS,YAAa,WAMfA,YAAS,WAAY,WASnBA,YAAS,WAAY,WAuBvBA,YAAS,UAAW,WAG3BA,YAAS,UAAW,WAsBbA,YAAS,YAAa,WAClBA,YAAS,YAAa,WAa/BA,YAAS,YAAa,WAQnBA,YAAS,YAAa,WAClBA,YAAS,YAAa,Y,OCzG/B7B,IAzCK,IAOb,IAPc,UACnBP,EADmB,MAEnBT,EAFmB,SAGnB8C,EAHmB,QAInB7B,EAJmB,SAKnB8B,EALmB,MAMnB7B,GACI,EACJ,MAAM8B,EAAgB,CAAC,gBAQvB,OAPI9B,GACF8B,EAAcC,KAAK,aAEjBxC,GACFuC,EAAcC,KAAKxC,GAInB,eAAC,EAAD,CAASA,UAAWuC,EAAcE,KAAK,KAAvC,UACGlD,GACC,cAACmD,EAAA,EAAD,CACE1C,UAAU,cACV2C,GAAIN,EACJ7B,QAASA,EACToC,QAASrD,IAGZ+C,EACA7B,GAAS,qBAAKT,UAAU,WAAf,SAA2BS,S,iCChC3C,yCAYA,MAAMoC,EAAeX,YAAO,QAAPA,CACnBY,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,YAAO,YAoDMV,IAjDG,IAAqC,IAApC,QAAElC,EAAF,QAAWoC,KAAYS,GAAY,EACpD,OACE,cAACR,EAAD,CAAcrC,QAASA,KAAa6C,EAApC,SACGT,M,8VCtBP,MAAMU,EAAwBpB,IAAOC,IAAV,0GAOdoB,EAAiBrB,IAAOsB,MAAV,mjDAELpB,YAAS,UAAW,WAChBA,YAAS,cAAe,2BA2CxBA,YAAS,YAAa,WAG7BA,YAAS,YAAa,WAKxBA,YAAS,SAAU,WAODA,YAAS,YAAa,WAItCA,YAAS,YAAa,YAO5BqB,EAAqBvB,IAAOC,IAAV,iIAQlBuB,EAAcxB,IAAOC,IAAV,0vBACFC,YAAS,UAAW,WA2B7BA,YAAS,SAAU,YAYnBuB,EAAiBzB,IAAOC,IAAV,0BAEdyB,EAAY1B,IAAO2B,GAAV,gIACXzB,YAAS,SAAU,YAOjB0B,EAAc5B,IAAOC,IAAV,2kCAGFC,YAAS,WAAY,WACrBA,YAAS,UAAW,WA+BhBA,YAAS,UAAW,WAChBA,YAAS,WAAY,WAK7BA,YAAS,YAAa,WAClBA,YAAS,YAAa,YAcnC2B,EAAY7B,IAAO8B,GAAV,2PACX5B,YAAS,SAAU,YAajB6B,EAAuB/B,IAAOC,IAAV,uqCAiBTC,YAAS,UAAW,WACpBA,YAAS,WAAY,WAEvBA,YAAS,WAAY,WAgBtBA,YAAS,YAAa,WAYnBA,YAAS,WAAY,YAM9BkB","file":"static/js/27.a11a2c19.chunk.js","sourcesContent":["import dayjsGenerateConfig from 'rc-picker/lib/generate/dayjs';\nimport generatePicker from 'antd/lib/date-picker/generatePicker';\nimport 'antd/lib/date-picker/style/index.css';\n\nconst DatePicker = generatePicker(dayjsGenerateConfig);\n\nexport default DatePicker;\n","import React, { Fragment } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Row, Col, Input, Select, Button } from 'antd';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport DatePicker from 'components/UI/AntdDatePicker/AntdDatePicker';\nimport { FormTitle } from './AccountSettings.style';\n\nconst genderOptions = [\n  { label: 'Male', value: 'male' },\n  { label: 'Female', value: 'female' },\n  { label: 'Other', value: 'Other' },\n];\nconst languageOptions = [\n  { label: 'English', value: 'english' },\n  { label: 'Spanish', value: 'spanish' },\n  { label: 'French', value: 'french' },\n  { label: 'Russian', value: 'russian' },\n];\n\nconst AgentCreateOrUpdateForm = () => {\n  const {\n    control,\n    formState: { errors },\n    handleSubmit,\n  } = useForm();\n  const onSubmit = (data) => console.log(data);\n  return (\n    <Fragment>\n      <FormTitle>Basic Information</FormTitle>\n      <form className=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\n        <Row gutter={30}>\n          <Col lg={12}>\n            <FormControl\n              label=\"First name\"\n              htmlFor=\"firstName\"\n              error={errors.firstName && <span>This field is required!</span>}\n            >\n              <Controller\n                name=\"firstName\"\n                defaultValue=\"\"\n                control={control}\n                rules={{ required: true }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <Input onChange={onChange} onBlur={onBlur} value={value} />\n                )}\n              />\n            </FormControl>\n          </Col>\n          <Col lg={12}>\n            <FormControl\n              label=\"Last name\"\n              htmlFor=\"lastName\"\n              error={errors.lastName && <span>This field is required!</span>}\n            >\n              <Controller\n                name=\"lastName\"\n                defaultValue=\"\"\n                control={control}\n                rules={{ required: true }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <Input onChange={onChange} onBlur={onBlur} value={value} />\n                )}\n              />\n            </FormControl>\n          </Col>\n        </Row>\n        <Row gutter={30}>\n          <Col lg={12}>\n            <FormControl\n              label=\"Date of birth\"\n              htmlFor=\"dateOfBirthday\"\n              error={\n                errors.dateOfBirthday && <span>This field is required!</span>\n              }\n            >\n              <Controller\n                name=\"dateOfBirthday\"\n                defaultValue=\"\"\n                control={control}\n                rules={{ required: true }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <DatePicker\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                  />\n                )}\n              />\n            </FormControl>\n          </Col>\n          <Col lg={12}>\n            <Row gutter={30}>\n              <Col md={12}>\n                <FormControl\n                  label=\"I am\"\n                  htmlFor=\"agentGender\"\n                  error={\n                    errors.agentGender && <span>This field is required!</span>\n                  }\n                >\n                  <Controller\n                    name=\"agentGender\"\n                    defaultValue=\"\"\n                    control={control}\n                    rules={{ required: true }}\n                    render={({ field: { onChange, onBlur, value } }) => (\n                      <Select\n                        options={genderOptions}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                      />\n                    )}\n                  />\n                </FormControl>\n              </Col>\n              <Col md={12}>\n                <FormControl\n                  label=\"Preferred Language\"\n                  htmlFor=\"preferredLanguage\"\n                  error={\n                    errors.preferredLanguage && (\n                      <span>This field is required!</span>\n                    )\n                  }\n                >\n                  <Controller\n                    name=\"preferredLanguage\"\n                    defaultValue=\"\"\n                    control={control}\n                    rules={{ required: true }}\n                    render={({ field: { onChange, onBlur, value } }) => (\n                      <Select\n                        options={languageOptions}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                      />\n                    )}\n                  />\n                </FormControl>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row gutter={30}>\n          <Col lg={12}>\n            <FormControl\n              label=\"Email address\"\n              htmlFor=\"email\"\n              error={\n                errors.email && (\n                  <>\n                    {errors.email?.type === 'required' && (\n                      <span>This field is required!</span>\n                    )}\n                    {errors.email?.type === 'pattern' && (\n                      <span>Please enter a valid email address!</span>\n                    )}\n                  </>\n                )\n              }\n            >\n              <Controller\n                name=\"email\"\n                defaultValue=\"\"\n                control={control}\n                rules={{\n                  required: true,\n                  pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n                }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <Input\n                    type=\"email\"\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                  />\n                )}\n              />\n            </FormControl>\n          </Col>\n          <Col lg={12}>\n            <FormControl\n              label=\"Phone number\"\n              htmlFor=\"phoneNumber\"\n              error={\n                errors.phoneNumber && (\n                  <>\n                    {errors.phoneNumber?.type === 'required' && (\n                      <span>This field is required!</span>\n                    )}\n                    {errors.phoneNumber?.type === 'pattern' && (\n                      <span>Please enter your valid number!</span>\n                    )}\n                  </>\n                )\n              }\n            >\n              <Controller\n                name=\"phoneNumber\"\n                defaultValue=\"\"\n                control={control}\n                rules={{\n                  required: true,\n                  pattern: /^[0-9]*$/,\n                }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <Input onChange={onChange} onBlur={onBlur} value={value} />\n                )}\n              />\n            </FormControl>\n          </Col>\n          <Col lg={24}>\n            <FormControl\n              label=\"Where you live\"\n              htmlFor=\"address\"\n              error={errors.address && <span>This field is required!</span>}\n            >\n              <Controller\n                name=\"address\"\n                defaultValue=\"\"\n                control={control}\n                rules={{\n                  required: true,\n                }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <Input onChange={onChange} onBlur={onBlur} value={value} />\n                )}\n              />\n            </FormControl>\n          </Col>\n          <Col lg={24}>\n            <FormControl\n              label=\"Describe Yourself (Optional)\"\n              htmlFor=\"describeYourself\"\n            >\n              <Controller\n                name=\"describeYourself\"\n                defaultValue=\"\"\n                control={control}\n                rules={{\n                  required: true,\n                }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <Input.TextArea\n                    rows={5}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                  />\n                )}\n              />\n            </FormControl>\n          </Col>\n        </Row>\n        <div className=\"submit-container\">\n          <Button htmlType=\"submit\" type=\"primary\">\n            Save Changes\n          </Button>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default AgentCreateOrUpdateForm;\n","import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n\n  .field-label {\n    display: block;\n    color: ${themeGet('text.0', '#2C2C2C')};\n    font-size: 15px;\n    line-height: 18px;\n    font-weight: 600;\n    margin-bottom: 15px;\n  }\n\n  .ant-input,\n  .ant-picker,\n  .ant-input-number,\n  .ant-input-password {\n    width: 100%;\n    min-height: 48px;\n    border-radius: 3px;\n    border-color: ${themeGet('border.3', '#E6E6E6')};\n    &:focus,\n    &.ant-input-focused,\n    &.ant-picker-focused,\n    &.ant-input-number-focused,\n    &.ant-input-password-focused {\n      box-shadow: 0 0 0 1px rgba(0, 132, 137, 0.2);\n    }\n  }\n\n  .ant-checkbox-wrapper {\n    .ant-checkbox {\n      + span {\n        font-size: 15px;\n        font-weight: 700;\n        color: ${themeGet('text.0', '#2C2C2C')};\n        line-height: 1;\n      }\n      .ant-checkbox-inner {\n        border-radius: 0;\n        border-color: ${themeGet('text.1', '#909090')};\n      }\n      &.ant-checkbox-checked {\n        .ant-checkbox-inner {\n          border-color: ${themeGet('primary.0', '#008489')};\n          background-color: ${themeGet('primary.0', '#008489')};\n        }\n      }\n    }\n  }\n\n  .ant-input-number {\n    max-width: 100px;\n    .ant-input-number-input {\n      min-height: 48px;\n    }\n    &:hover {\n      border-color: ${themeGet('border.3', '#E6E6E6')};\n    }\n  }\n  .ant-input-number-handler:hover {\n    .ant-input-number-handler-up-inner,\n    .ant-input-number-handler-down-inner {\n      color: ${themeGet('primary.0', '#008489')};\n    }\n  }\n\n  .ant-picker {\n    &:hover {\n      border-color: ${themeGet('border.3', '#E6E6E6')};\n    }\n  }\n\n  .ant-select {\n    &.ant-select-single:not(.ant-select-customize-input) {\n      width: 100%;\n      .ant-select-selector {\n        border-radius: 3px;\n        border-color: ${themeGet('border.3', '#E6E6E6')};\n        min-height: 48px;\n        .ant-select-selection-search-input {\n          min-height: 48px;\n        }\n        .ant-select-selection-item {\n          display: flex;\n          align-items: center;\n        }\n      }\n    }\n    &.ant-select-focused {\n      &.ant-select-single:not(.ant-select-customize-input) {\n        .ant-select-selector {\n          box-shadow: 0 0 0 1px rgba(0, 132, 137, 0.2);\n        }\n      }\n    }\n  }\n\n  &.has-error {\n    .ant-input,\n    .ant-input-password {\n      border-color: ${themeGet('error.0', '#F9503D')};\n    }\n    .feedback {\n      color: ${themeGet('error.0', '#F9503D')};\n    }\n    .ant-input-password {\n      .ant-input {\n        border-color: transparent;\n      }\n    }\n  }\n\n  .ant-input-password {\n    .ant-input {\n      min-height: auto;\n      border-radius: initial;\n      border-color: transparent;\n      &:focus {\n        box-shadow: none;\n      }\n    }\n  }\n\n  .ant-radio-group-solid {\n    .ant-radio-button-wrapper-checked:not(.ant-radio-button-wrapper-disabled) {\n      border-color: ${themeGet('primary.0', '#008489')};\n      background-color: ${themeGet('primary.0', '#008489')};\n      &::before {\n        content: none;\n      }\n      &:hover {\n        color: #fff;\n        &::before {\n          content: none;\n        }\n      }\n    }\n    .ant-radio-button-wrapper {\n      &:hover {\n        color: ${themeGet('primary.0', '#008489')};\n      }\n    }\n  }\n\n  button[type='submit'] {\n    border-radius: 3px;\n    height: 47px;\n    border-color: ${themeGet('primary.0', '#008489')};\n    background-color: ${themeGet('primary.0', '#008489')};\n    font-size: 15px;\n    font-weight: 700;\n    text-transform: capitalize;\n    padding-left: 28px;\n    padding-right: 28px;\n    line-height: 1;\n\n    &::after {\n      content: none;\n    }\n  }\n`;\n\nexport default Wrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport HtmlLabel from '../HtmlLabel/HtmlLabel';\nimport Wrapper from './FormControl.style';\n\nconst FormControl = ({\n  className,\n  label,\n  labelTag,\n  htmlFor,\n  children,\n  error,\n}) => {\n  const addAllClasses = ['form-control'];\n  if (error) {\n    addAllClasses.push('has-error');\n  }\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    <Wrapper className={addAllClasses.join(' ')}>\n      {label && (\n        <HtmlLabel\n          className=\"field-label\"\n          as={labelTag}\n          htmlFor={htmlFor}\n          content={label}\n        />\n      )}\n      {children}\n      {error && <div className=\"feedback\">{error}</div>}\n    </Wrapper>\n  );\n};\n\nFormControl.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  labelTag: PropTypes.string,\n  htmlFor: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.any,\n};\n\nexport default FormControl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n} from 'styled-system';\nimport { base, themed } from '../Base';\n\nconst LabelWrapper = styled('label')(\n  base,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n  themed('Heading')\n);\n\nconst HtmlLabel = ({ htmlFor, content, ...props }) => {\n  return (\n    <LabelWrapper htmlFor={htmlFor} {...props}>\n      {content}\n    </LabelWrapper>\n  );\n};\n\nHtmlLabel.propTypes = {\n  htmlFor: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  fontFamily: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  fontWeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  textAlign: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  lineHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  letterSpacing: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  ...base.propTypes,\n};\n\nexport default HtmlLabel;\n","import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nconst AccountSettingWrapper = styled.div`\n  padding: 60px 0;\n  @media (max-width: 767px) {\n    padding: 30px 0;\n  }\n`;\n\nexport const AccountSidebar = styled.aside`\n  border-radius: 6px;\n  background-color: ${themeGet('color.1', '#ffffff')};\n  box-shadow: 0 3px 6px ${themeGet('boxShadow.1', 'rgba(26, 68, 116, 0.16)')};\n  overflow: hidden;\n  @media (max-width: 767px) {\n    box-shadow: none;\n    margin-bottom: 0;\n  }\n\n  .ant-menu {\n    padding: 27px 0 20px;\n    border: 0;\n    @media (max-width: 767px) {\n      display: flex;\n      flex-wrap: nowrap;\n      overflow-y: auto;\n      padding: 20px 0 30px;\n    }\n    li {\n      margin: 22px 0;\n      height: 26px;\n      line-height: 26px;\n      padding: 0 30px !important;\n      @media (min-width: 1441px) {\n        padding: 0 60px !important;\n      }\n      @media (max-width: 767px) {\n        width: auto;\n        height: inherit;\n        line-height: initial;\n        padding: 0 15px !important;\n        margin: 0 !important;\n        flex-shrink: 0;\n        &:first-child {\n          padding-left: 0 !important;\n        }\n        &::after {\n          display: none;\n        }\n      }\n      &.ant-menu-item-selected {\n        background-color: transparent;\n        &::after {\n          left: 0;\n          right: auto;\n          border-color: ${themeGet('primary.0', '#008489')};\n        }\n        a {\n          color: ${themeGet('primary.0', '#008489')};\n          font-weight: 700;\n        }\n      }\n      a {\n        color: ${themeGet('text.0', '#2C2C2C')};\n        font-size: 15px;\n        transition: 0.3s ease;\n        @media (max-width: 767px) {\n          padding-bottom: 8px;\n          border-bottom: 2px solid transparent;\n          &.active {\n            border-bottom-color: ${themeGet('primary.0', '#008489')};\n          }\n        }\n        &:hover {\n          color: ${themeGet('primary.0', '#008489')};\n        }\n      }\n    }\n  }\n`;\n\nexport const SidebarMenuWrapper = styled.div`\n  overflow: hidden;\n  @media (max-width: 767px) {\n    height: 67px;\n    margin-bottom: 8px;\n  }\n`;\n\nexport const AgentAvatar = styled.div`\n  background-color: ${themeGet('color.2', '#F7F7F7')};\n  padding: 45px 30px 30px;\n  @media (min-width: 1441px) {\n    padding: 60px 60px 30px;\n  }\n  @media (max-width: 767px) {\n    display: flex;\n    align-items: center;\n    padding: 32px 30px;\n  }\n  .ant-avatar {\n    width: 90px;\n    height: 90px;\n    margin-bottom: 25px;\n    @media (max-width: 767px) {\n      width: 80px;\n      height: 80px;\n      margin-bottom: 0;\n      margin-right: 20px;\n      flex-shrink: 0;\n    }\n    @media (max-width: 320px) {\n      width: 65px;\n      height: 65px;\n    }\n  }\n  a {\n    color: ${themeGet('text.0', '#2C2C2C')};\n    font-size: 13px;\n    line-height: 16px;\n    &:hover,\n    &:focus {\n      outline: 0;\n      box-shadow: none;\n      text-decoration: none;\n    }\n  }\n`;\n\nexport const ContentWrapper = styled.div``;\n\nexport const AgentName = styled.h3`\n  color: ${themeGet('text.0', '#2C2C2C')};\n  font-size: 17px;\n  line-height: 21px;\n  font-weight: 700;\n  margin-bottom: 4px;\n`;\n\nexport const FromWrapper = styled.div`\n  padding: 30px;\n  border-radius: 6px;\n  border: 1px solid ${themeGet('border.3', '#E6E6E6')};\n  background-color: ${themeGet('color.1', '#ffffff')};\n  overflow: hidden;\n  @media (min-width: 1441px) {\n    padding: 60px;\n  }\n  @media (max-width: 767px) {\n    padding: 0;\n    border-radius: 0;\n    border: 0;\n\n    h2 {\n      display: none;\n    }\n\n    form {\n      padding-bottom: 50px;\n    }\n  }\n\n  .submit-container {\n    display: flex;\n    flex-direction: row-reverse;\n    margin-top: 30px;\n    @media (max-width: 767px) {\n      width: 100%;\n      padding: 22px 30px;\n      flex-direction: row;\n      position: fixed;\n      bottom: 0;\n      left: 0;\n      z-index: 1;\n      background-color: ${themeGet('color.1', '#ffffff')};\n      border-top: 1px solid ${themeGet('border.3', '#E6E6E6')};\n    }\n    > button[type='submit'] {\n      border-radius: 3px;\n      height: 47px;\n      border-color: ${themeGet('primary.0', '#008489')};\n      background-color: ${themeGet('primary.0', '#008489')};\n      font-size: 15px;\n      font-weight: 700;\n      text-transform: capitalize;\n      padding-left: 28px;\n      padding-right: 28px;\n      line-height: 1;\n      &::after {\n        content: none;\n      }\n    }\n  }\n`;\n\nexport const FormTitle = styled.h2`\n  color: ${themeGet('text.0', '#2C2C2C')};\n  font-size: 25px;\n  line-height: 30px;\n  font-weight: 700;\n  margin-bottom: 27px;\n  @media (min-width: 1441px) {\n    margin-bottom: 40px;\n  }\n  @media (max-width: 1200px) {\n    font-size: 22px;\n  }\n`;\n\nexport const AgentPictureUploader = styled.div`\n  @media (max-width: 767px) {\n    padding-bottom: 50px;\n  }\n  h4 {\n    font-size: 15px;\n    font-weight: 700;\n    line-height: 18px;\n    margin-bottom: 20px;\n  }\n  .image_uploader {\n    display: block;\n    overflow: hidden;\n    margin-bottom: 30px;\n  }\n  .ant-upload.ant-upload-drag {\n    border-radius: 3px;\n    background-color: ${themeGet('color.2', '#F7F7F7')};\n    border: 1px solid ${themeGet('border.0', '#EBEBEB')};\n    &:not(.ant-upload-disabled):hover {\n      border-color: ${themeGet('border.0', '#EBEBEB')};\n    }\n    .ant-upload.ant-upload-btn {\n      padding: 56px 0;\n      @media (max-width: 767px) {\n        padding: 30px 0;\n      }\n      .ant-upload-drag-container {\n        > div {\n          flex-direction: column;\n          justify-content: center;\n          .ant-upload-text {\n            padding: 0;\n            margin: 5px 0 0;\n            text-decoration: underline;\n            background-color: transparent;\n            color: ${themeGet('primary.0', '#008489')};\n          }\n        }\n      }\n    }\n  }\n  .ant-upload-list {\n    &.ant-upload-list-picture-card {\n      margin-top: 20px;\n      .ant-upload-list-item {\n        padding: 5px;\n        border-radius: 3px;\n        border-color: ${themeGet('border.3', '#E6E6E6')};\n      }\n    }\n  }\n`;\n\nexport default AccountSettingWrapper;\n"],"sourceRoot":""}