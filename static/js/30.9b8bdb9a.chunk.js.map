{"version":3,"sources":["containers/Agent/AccountSettings/AccountSettings.style.js","components/UI/AntdDatePicker/AntdDatePicker.js","containers/Agent/AccountSettings/AgentCreateOrUpdateForm.js","components/UI/FormControl/FormControl.style.js","components/UI/FormControl/FormControl.js","components/UI/HtmlLabel/HtmlLabel.js"],"names":["AccountSettingWrapper","styled","div","AccountSidebar","aside","themeGet","SidebarMenuWrapper","AgentAvatar","ContentWrapper","AgentName","h3","FromWrapper","FormTitle","h2","DatePicker","generatePicker","dayjsGenerateConfig","AgentCreateOrUpdateForm","user","useContext","AuthContext","control","formState","errors","handleSubmit","useForm","openNotificationWithIcon","type","title","description","message","placement","isCurrentPasswordCorrect","setIsCurrentPasswordCorrect","useState","className","onSubmit","async","data","current_password","password","new_password","confirm_new_password","params","user_id","id","res","AxiosFetch","console","log","success","gutter","lg","label","htmlFor","error","name","defaultValue","split","rules","required","render","field","onChange","onBlur","value","md","email","pattern","Password","minLength","maxLength","htmlType","Wrapper","FormControl","labelTag","children","addAllClasses","push","join","HtmlLabel","as","content","LabelWrapper","base","fontFamily","fontWeight","textAlign","lineHeight","letterSpacing","themed","props"],"mappings":"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","file":"static/js/30.9b8bdb9a.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nconst AccountSettingWrapper = styled.div`\n  padding: 60px 0;\n  @media (max-width: 767px) {\n    padding: 30px 0;\n  }\n`;\n\nexport const AccountSidebar = styled.aside`\n  border-radius: 6px;\n  background-color: ${themeGet('color.1', '#ffffff')};\n  box-shadow: 0 3px 6px ${themeGet('boxShadow.1', 'rgba(26, 68, 116, 0.16)')};\n  overflow: hidden;\n  @media (max-width: 767px) {\n    box-shadow: none;\n    margin-bottom: 0;\n  }\n\n  .ant-menu {\n    padding: 27px 0 20px;\n    border: 0;\n    @media (max-width: 767px) {\n      display: flex;\n      flex-wrap: nowrap;\n      overflow-y: auto;\n      padding: 20px 0 30px;\n    }\n    li {\n      margin: 22px 0;\n      height: 26px;\n      line-height: 26px;\n      padding: 0 30px !important;\n      @media (min-width: 1441px) {\n        padding: 0 60px !important;\n      }\n      @media (max-width: 767px) {\n        width: auto;\n        height: inherit;\n        line-height: initial;\n        padding: 0 15px !important;\n        margin: 0 !important;\n        flex-shrink: 0;\n        &:first-child {\n          padding-left: 0 !important;\n        }\n        &::after {\n          display: none;\n        }\n      }\n      &.ant-menu-item-selected {\n        background-color: transparent;\n        &::after {\n          left: 0;\n          right: auto;\n          border-color: ${themeGet('primary.0', '#008489')};\n        }\n        a {\n          color: ${themeGet('primary.0', '#008489')};\n          font-weight: 700;\n        }\n      }\n      a {\n        color: ${themeGet('text.0', '#2C2C2C')};\n        font-size: 15px;\n        transition: 0.3s ease;\n        @media (max-width: 767px) {\n          padding-bottom: 8px;\n          border-bottom: 2px solid transparent;\n          &.active {\n            border-bottom-color: ${themeGet('primary.0', '#008489')};\n          }\n        }\n        &:hover {\n          color: ${themeGet('primary.0', '#008489')};\n        }\n      }\n    }\n  }\n`;\n\nexport const SidebarMenuWrapper = styled.div`\n  overflow: hidden;\n  @media (max-width: 767px) {\n    height: 67px;\n    margin-bottom: 8px;\n  }\n`;\n\nexport const AgentAvatar = styled.div`\n  background-color: ${themeGet('color.2', '#F7F7F7')};\n  padding: 45px 30px 30px;\n  @media (min-width: 1441px) {\n    padding: 60px 60px 30px;\n  }\n  @media (max-width: 767px) {\n    display: flex;\n    align-items: center;\n    padding: 32px 30px;\n  }\n  .ant-avatar {\n    width: 90px;\n    height: 90px;\n    margin-bottom: 25px;\n    @media (max-width: 767px) {\n      width: 80px;\n      height: 80px;\n      margin-bottom: 0;\n      margin-right: 20px;\n      flex-shrink: 0;\n    }\n    @media (max-width: 320px) {\n      width: 65px;\n      height: 65px;\n    }\n  }\n  a {\n    color: ${themeGet('text.0', '#2C2C2C')};\n    font-size: 13px;\n    line-height: 16px;\n    &:hover,\n    &:focus {\n      outline: 0;\n      box-shadow: none;\n      text-decoration: none;\n    }\n  }\n`;\n\nexport const ContentWrapper = styled.div``;\n\nexport const AgentName = styled.h3`\n  color: ${themeGet('text.0', '#2C2C2C')};\n  font-size: 17px;\n  line-height: 21px;\n  font-weight: 700;\n  margin-bottom: 4px;\n`;\n\nexport const FromWrapper = styled.div`\n  padding: 30px;\n  border-radius: 6px;\n  border: 1px solid ${themeGet('border.3', '#E6E6E6')};\n  background-color: ${themeGet('color.1', '#ffffff')};\n  overflow: hidden;\n  @media (min-width: 1441px) {\n    padding: 60px;\n  }\n  @media (max-width: 767px) {\n    padding: 0;\n    border-radius: 0;\n    border: 0;\n\n    h2 {\n      display: none;\n    }\n\n    form {\n      padding-bottom: 50px;\n    }\n  }\n\n  .submit-container {\n    display: flex;\n    flex-direction: row-reverse;\n    margin-top: 30px;\n    @media (max-width: 767px) {\n      width: 100%;\n      padding: 22px 30px;\n      flex-direction: row;\n      position: fixed;\n      bottom: 0;\n      left: 0;\n      z-index: 1;\n      background-color: ${themeGet('color.1', '#ffffff')};\n      border-top: 1px solid ${themeGet('border.3', '#E6E6E6')};\n    }\n    > button[type='submit'] {\n      border-radius: 3px;\n      height: 47px;\n      border-color: ${themeGet('primary.0', '#008489')};\n      background-color: ${themeGet('primary.0', '#008489')};\n      font-size: 15px;\n      font-weight: 700;\n      text-transform: capitalize;\n      padding-left: 28px;\n      padding-right: 28px;\n      line-height: 1;\n      &::after {\n        content: none;\n      }\n    }\n  }\n`;\n\nexport const FormTitle = styled.h2`\n  color: ${themeGet('text.0', '#2C2C2C')};\n  font-size: 25px;\n  line-height: 30px;\n  font-weight: 700;\n  margin-bottom: 27px;\n  @media (min-width: 1441px) {\n    margin-bottom: 40px;\n  }\n  @media (max-width: 1200px) {\n    font-size: 22px;\n  }\n`;\n\nexport const AgentPictureUploader = styled.div`\n  @media (max-width: 767px) {\n    padding-bottom: 50px;\n  }\n  h4 {\n    font-size: 15px;\n    font-weight: 700;\n    line-height: 18px;\n    margin-bottom: 20px;\n  }\n  .image_uploader {\n    display: block;\n    overflow: hidden;\n    margin-bottom: 30px;\n  }\n  .ant-upload.ant-upload-drag {\n    border-radius: 3px;\n    background-color: ${themeGet('color.2', '#F7F7F7')};\n    border: 1px solid ${themeGet('border.0', '#EBEBEB')};\n    &:not(.ant-upload-disabled):hover {\n      border-color: ${themeGet('border.0', '#EBEBEB')};\n    }\n    .ant-upload.ant-upload-btn {\n      padding: 56px 0;\n      @media (max-width: 767px) {\n        padding: 30px 0;\n      }\n      .ant-upload-drag-container {\n        > div {\n          flex-direction: column;\n          justify-content: center;\n          .ant-upload-text {\n            padding: 0;\n            margin: 5px 0 0;\n            text-decoration: underline;\n            background-color: transparent;\n            color: ${themeGet('primary.0', '#008489')};\n          }\n        }\n      }\n    }\n  }\n  .ant-upload-list {\n    &.ant-upload-list-picture-card {\n      margin-top: 20px;\n      .ant-upload-list-item {\n        padding: 5px;\n        border-radius: 3px;\n        border-color: ${themeGet('border.3', '#E6E6E6')};\n      }\n    }\n  }\n`;\n\nexport default AccountSettingWrapper;\n","import dayjsGenerateConfig from 'rc-picker/lib/generate/dayjs';\nimport generatePicker from 'antd/lib/date-picker/generatePicker';\nimport 'antd/lib/date-picker/style/index.css';\n\nconst DatePicker = generatePicker(dayjsGenerateConfig);\n\nexport default DatePicker;\n","import React, { Fragment, useContext, useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Row, Col, Input, Select, Button, notification } from 'antd';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport DatePicker from 'components/UI/AntdDatePicker/AntdDatePicker';\nimport { FormTitle } from './AccountSettings.style';\nimport { AuthContext } from 'context/AuthProvider';\nimport AxiosFetch from 'library/hooks/AxiosFetch';\n\nconst AgentCreateOrUpdateForm = () => {\n\n  const { user } = useContext(AuthContext);\n\n  const getFirstName  = () => {\n    const nameArray = user.name.split(\" \");\n    return nameArray[0];\n  }\n\n  const getlastName  = () => {\n    const nameArray = user.name.split(\" \");\n    return nameArray[1];\n  }\n\n  const {\n    control,\n    formState: { errors },\n    handleSubmit,\n  } = useForm();\n  \n  const openNotificationWithIcon = (type, title, description) => {\n    notification[type]({\n      message: title,\n      description: description,\n      placement: 'bottomRight'\n    });\n  };\n\n  const [isCurrentPasswordCorrect, setIsCurrentPasswordCorrect] = useState(true);\n  const onSubmit = async (data) => {    \n    if(data.current_password)\n    {\n      if(data.current_password !== user.password)\n      {\n        openNotificationWithIcon('error', 'Error!', \"Current Password is not correct.\")\n        return;\n      }\n      if(data.new_password == '' || data.confirm_new_password == '')\n      {\n        openNotificationWithIcon('error', 'Error!', \"Input correct new password!\")\n        return;\n      }\n    }\n    if(data.new_password || data.confirm_new_password)\n    {\n      if(data.new_password !== data.confirm_new_password || data.confirm_new_password == '')\n      {\n        openNotificationWithIcon('error', 'Error!', \"Confirm Password is not correct.\")\n        return;\n      }\n    }\n\n    let url = '/updateProfile';\n    const params = data;\n    params.user_id = user.id;\n\n    let res = await AxiosFetch(url, params, \"POST\");\n    console.log(params)\n    if(!res.data.success)\n    {\n      openNotificationWithIcon('error', 'Error!', res.data.message)\n      return;\n    }\n    openNotificationWithIcon('success', 'Success!', \"Your profile has been updated successfully.\")\n  }\n\n  return (\n    <Fragment>\n      <FormTitle>Profile Information</FormTitle>\n      <form className=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\n        <Row gutter={30}>\n          <Col lg={12}>\n            <FormControl\n              label=\"First name\"\n              htmlFor=\"firstName\"\n              error={user.name === null && <span>This field is required!</span>}\n            >\n              <Controller\n                name=\"firstName\"\n                defaultValue={getFirstName()}\n                control={control}\n                rules={{ required: true }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <Input onChange={onChange} onBlur={onBlur} value={ value } />\n                )}\n              />\n            </FormControl>\n          </Col>\n          <Col lg={12}>\n            <FormControl\n              label=\"Last name\"\n              htmlFor=\"lastName\"\n              error={user.name === null && <span>This field is required!</span>}\n            >\n              <Controller\n                name=\"lastName\"\n                defaultValue={getlastName()}\n                control={control}\n                rules={{ required: true }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <Input onChange={onChange} onBlur={onBlur} value={ value } />\n                )}\n              />\n            </FormControl>\n          </Col>\n        </Row>\n          \n        <Row gutter={30}>\n          <Col md={12}>\n            <FormControl\n                label=\"Email address\"\n                htmlFor=\"email\"\n                error={\n                  user.email === null && (\n                    <>\n                      {errors.email?.type === 'required' && (\n                        <span>This field is required!</span>\n                      )}\n                      {errors.email?.type === 'pattern' && (\n                        <span>Please enter a valid email address!</span>\n                      )}\n                    </>\n                  )\n                }\n              >\n                <Controller\n                  name=\"email\"\n                  defaultValue={user.email}\n                  control={control}\n                  rules={{\n                    required: true,\n                    pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n                  }}\n                  render={({ field: { onChange, onBlur, value } }) => (\n                    <Input\n                      type=\"email\"\n                      onChange={onChange}\n                      onBlur={onBlur}\n                      value={value}\n                    />\n                  )}\n                />\n              </FormControl>\n          </Col>       \n          <Col md={12}>\n            <FormControl\n              label=\"Current Password\"\n              htmlFor=\"current_password\"\n            >\n              <Controller\n                name=\"current_password\"\n                defaultValue=\"\"\n                control={control}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <Input.Password onChange={onChange} onBlur={onBlur} value={value} />\n                )}\n              />\n            </FormControl>\n          </Col>\n        </Row>\n        <Row gutter={30}>\n          <Col md={12}>\n            <FormControl\n              label=\"New Password\"\n              htmlFor=\"new_password\"\n              error={\n                errors.new_password && (\n                  <>                    \n                    {errors.new_password?.type === 'minLength' && (\n                      <span>Password must be at lest 6 characters!</span>\n                    )}\n                    {errors.new_password?.type === 'maxLength' && (\n                      <span>Password must not be longer than 20 characters!</span>\n                    )}\n                  </>\n                )\n              }\n            >\n              <Controller\n                name=\"new_password\"\n                defaultValue=\"\"\n                control={control}\n                rules={{ minLength: 6, maxLength: 20 }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <Input.Password onChange={onChange} onBlur={onBlur} value={value} />\n                )}\n              />\n            </FormControl>\n          </Col>\n          <Col md={12}>\n            <FormControl\n              label=\"Confirm New Password\"\n              htmlFor=\"confirm_new_password\"\n              error={\n                errors.confirm_new_password && (\n                  <>                    \n                    {errors.confirm_new_password?.type === 'minLength' && (\n                      <span>Password must be at lest 6 characters!</span>\n                    )}\n                    {errors.confirm_new_password?.type === 'maxLength' && (\n                      <span>Password must not be longer than 20 characters!</span>\n                    )}\n                  </>\n                )\n              }\n            >\n              <Controller\n                name=\"confirm_new_password\"\n                defaultValue=\"\"\n                control={control}\n                rules={{ minLength: 6, maxLength: 20 }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <Input.Password onChange={onChange} onBlur={onBlur} value={value} />\n                )}\n              />\n            </FormControl>\n          </Col>\n        </Row>\n        \n        <div className=\"submit-container\">\n          <Button htmlType=\"submit\" type=\"primary\">\n            Save Changes\n          </Button>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default AgentCreateOrUpdateForm;\n","import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n\n  .field-label {\n    display: block;\n    color: ${themeGet('text.0', '#2C2C2C')};\n    font-size: 15px;\n    line-height: 18px;\n    font-weight: 600;\n    margin-bottom: 15px;\n  }\n\n  .ant-input,\n  .ant-picker,\n  .ant-input-number,\n  .ant-input-password {\n    width: 100%;\n    min-height: 48px;\n    border-radius: 3px;\n    border-color: ${themeGet('border.3', '#E6E6E6')};\n    &:focus,\n    &.ant-input-focused,\n    &.ant-picker-focused,\n    &.ant-input-number-focused,\n    &.ant-input-password-focused {\n      box-shadow: 0 0 0 1px rgba(0, 132, 137, 0.2);\n    }\n  }\n\n  .ant-checkbox-wrapper {\n    .ant-checkbox {\n      + span {\n        font-size: 15px;\n        font-weight: 700;\n        color: ${themeGet('text.0', '#2C2C2C')};\n        line-height: 1;\n      }\n      .ant-checkbox-inner {\n        border-radius: 0;\n        border-color: ${themeGet('text.1', '#909090')};\n      }\n      &.ant-checkbox-checked {\n        .ant-checkbox-inner {\n          border-color: ${themeGet('primary.0', '#008489')};\n          background-color: ${themeGet('primary.0', '#008489')};\n        }\n      }\n    }\n  }\n\n  .ant-input-number {\n    max-width: 100px;\n    .ant-input-number-input {\n      min-height: 48px;\n    }\n    &:hover {\n      border-color: ${themeGet('border.3', '#E6E6E6')};\n    }\n  }\n  .ant-input-number-handler:hover {\n    .ant-input-number-handler-up-inner,\n    .ant-input-number-handler-down-inner {\n      color: ${themeGet('primary.0', '#008489')};\n    }\n  }\n\n  .ant-picker {\n    &:hover {\n      border-color: ${themeGet('border.3', '#E6E6E6')};\n    }\n  }\n\n  .ant-select {\n    &.ant-select-single:not(.ant-select-customize-input) {\n      width: 100%;\n      .ant-select-selector {\n        border-radius: 3px;\n        border-color: ${themeGet('border.3', '#E6E6E6')};\n        min-height: 48px;\n        .ant-select-selection-search-input {\n          min-height: 48px;\n        }\n        .ant-select-selection-item {\n          display: flex;\n          align-items: center;\n        }\n      }\n    }\n    &.ant-select-focused {\n      &.ant-select-single:not(.ant-select-customize-input) {\n        .ant-select-selector {\n          box-shadow: 0 0 0 1px rgba(0, 132, 137, 0.2);\n        }\n      }\n    }\n  }\n\n  &.has-error {\n    .ant-input,\n    .ant-input-password {\n      border-color: ${themeGet('error.0', '#F9503D')};\n    }\n    .feedback {\n      color: ${themeGet('error.0', '#F9503D')};\n    }\n    .ant-input-password {\n      .ant-input {\n        border-color: transparent;\n      }\n    }\n  }\n\n  .ant-input-password {\n    .ant-input {\n      min-height: auto;\n      border-radius: initial;\n      border-color: transparent;\n      &:focus {\n        box-shadow: none;\n      }\n    }\n  }\n\n  .ant-radio-group-solid {\n    .ant-radio-button-wrapper-checked:not(.ant-radio-button-wrapper-disabled) {\n      border-color: ${themeGet('primary.0', '#008489')};\n      background-color: ${themeGet('primary.0', '#008489')};\n      &::before {\n        content: none;\n      }\n      &:hover {\n        color: #fff;\n        &::before {\n          content: none;\n        }\n      }\n    }\n    .ant-radio-button-wrapper {\n      &:hover {\n        color: ${themeGet('primary.0', '#008489')};\n      }\n    }\n  }\n\n  button[type='submit'] {\n    border-radius: 3px;\n    height: 47px;\n    border-color: ${themeGet('primary.0', '#008489')};\n    background-color: ${themeGet('primary.0', '#008489')};\n    font-size: 15px;\n    font-weight: 700;\n    text-transform: capitalize;\n    padding-left: 28px;\n    padding-right: 28px;\n    line-height: 1;\n\n    &::after {\n      content: none;\n    }\n  }\n`;\n\nexport default Wrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport HtmlLabel from '../HtmlLabel/HtmlLabel';\nimport Wrapper from './FormControl.style';\n\nconst FormControl = ({\n  className,\n  label,\n  labelTag,\n  htmlFor,\n  children,\n  error,\n}) => {\n  const addAllClasses = ['form-control'];\n  if (error) {\n    addAllClasses.push('has-error');\n  }\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    <Wrapper className={addAllClasses.join(' ')}>\n      {label && (\n        <HtmlLabel\n          className=\"field-label\"\n          as={labelTag}\n          htmlFor={htmlFor}\n          content={label}\n        />\n      )}\n      {children}\n      {error && <div className=\"feedback\">{error}</div>}\n    </Wrapper>\n  );\n};\n\nFormControl.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  labelTag: PropTypes.string,\n  htmlFor: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.any,\n};\n\nexport default FormControl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n} from 'styled-system';\nimport { base, themed } from '../Base';\n\nconst LabelWrapper = styled('label')(\n  base,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n  themed('Heading')\n);\n\nconst HtmlLabel = ({ htmlFor, content, ...props }) => {\n  return (\n    <LabelWrapper htmlFor={htmlFor} {...props}>\n      {content}\n    </LabelWrapper>\n  );\n};\n\nHtmlLabel.propTypes = {\n  htmlFor: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  fontFamily: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  fontWeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  textAlign: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  lineHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  letterSpacing: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  ...base.propTypes,\n};\n\nexport default HtmlLabel;\n"],"sourceRoot":""}